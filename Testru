Request:-

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                  xmlns:v01="http://com/rbsg/soa/C040PaymentManagement/CustomerRetrievalForPayment/V01/">
    <soapenv:Header/>
    <soapenv:Body>
        <v01:retrievePrimaryCustomerForArr>
            <requestHeader>
                <operatingBrand>NWB</operatingBrand>
                <!--Zero or more repetitions:-->
                <requestIds>
                    <!--Optional:-->
                    <systemId>RequestID</systemId>
                    <!--Optional:-->
                    <transactionId>123456789</transactionId>
                </requestIds>
                <requestIds>
                 <systemId>SourceID</systemId>
                 <transactionId>ISO</transactionId>
             </requestIds>
              <cmdType>Request</cmdType>
            </requestHeader>
            <processingParameter>
              <objectReference>
                 <identifier>NWB</identifier>
                 <context>
                    <schemeName>OrganizationEnterpriseIdType</schemeName>
                    <codeValue>OperatingBrandIdentifier</codeValue>
                 </context>
              </objectReference>
          </processingParameter>

            <arrangementIdentifier>
                <identifier>600001457620742222</identifier>
                <context>
                    <schemeName>ArrangementEnterpriseIdType</schemeName>
                    <codeValue>UKBasicBankAccountNumber</codeValue>
                    <!--Optional:-->
                    <description>aslkjdslahbkjdf</description>
                </context>
                <!--Optional:-->
                <description>aslkjdslahbkjdf</description>
            </arrangementIdentifier>
        </v01:retrievePrimaryCustomerForArr>
    </soapenv:Body>
</soapenv:Envelope>


-------------------

package com.rbs.bdd.infrastructure.soap.api;

import com.rbs.bdd.application.port.in.CustomerRetrievalPort;
import com.rbs.bdd.application.port.in.PaymentValidationPort;
import com.rbs.bdd.common.ServiceConstants;
import com.rbsg.soa.c040paymentmanagement.customerretrievalforpayment.v01.serviceparameters.v01.RetrievePrimaryCustomerForArrRequest;
import com.rbsg.soa.c040paymentmanagement.arrvalidationforpayment.v01.ValidateArrangementForPaymentRequest;
import org.springframework.ws.WebServiceMessage;
import org.springframework.ws.context.MessageContext;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;
import org.springframework.ws.server.endpoint.annotation.ResponsePayload;


/**
 * SOAP endpoint adapter class for handling the `validateArrangementForPayment` operation.
 * It uses Spring WS annotations to route incoming SOAP requests to the appropriate service layer.
 */
@Endpoint
public class PaymentValidationSoapAdapter {

    /**Changes for the request*/


    private final PaymentValidationPort paymentValidationPort;
    private final CustomerRetrievalPort customerRetrievalPort;

    /**
     * Constructor-based injection of the orchestrator that handles business logic.
     *
     * @param paymentValidationPort the orchestrator service
     */
    public PaymentValidationSoapAdapter(PaymentValidationPort paymentValidationPort,CustomerRetrievalPort customerRetrievalPort) {
        this.paymentValidationPort = paymentValidationPort;
        this.customerRetrievalPort = customerRetrievalPort;
    }



    /**
     * Handles the `validateArrangementForPayment` SOAP request.
     * Delegates request processing to the orchestrator which modifies the response message directly.
     *
     * @param request the SOAP request payload
     * @param context the Spring WS message context
     */
    @PayloadRoot(namespace = ServiceConstants.NAMESPACE_URI_FOR_ACCOUNT_VALIDATION, localPart = "validateArrangementForPayment")
    @ResponsePayload
    public void validateArrangementForPayment(@RequestPayload ValidateArrangementForPaymentRequest request,
                                                MessageContext context) {

        WebServiceMessage response = context.getResponse();
        paymentValidationPort.validateArrangementForPayment(request, response);
         }

    /**
     * Handles the `RetrieveCustomerRequest` SOAP request.
     * Delegates request processing to the orchestrator which modifies the response message directly.
     *
     * @param request the SOAP request payload
     * @param context the Spring WS message context
     */
    @PayloadRoot(namespace = ServiceConstants.NAMESPACE_URI_FOR_CUSTOMER_RETRIEVAL, localPart = "retrievePrimaryCustomerForArr")
    @ResponsePayload
    public void validateCustomerRetrieval(@RequestPayload RetrievePrimaryCustomerForArrRequest request,
                                              MessageContext context) {
        System.out.println("Reached here in customer");
        WebServiceMessage response = context.getResponse();

        customerRetrievalPort.validateCustomerRetrieval(request, response);
    }

}

------------------
CustomerRetrievalForPaymentParameters.xsd

<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://com/rbsg/soa/C040PaymentManagement/CustomerRetrievalForPayment/V01/ServiceParameters/V01/" version="RBS_20210325_Baseline" xmlns:crfpSP="http://com/rbsg/soa/C040PaymentManagement/CustomerRetrievalForPayment/V01/ServiceParameters/V01/" xmlns:crfpTO="http://com/rbsg/soa/C040PaymentManagement/CustomerRetrievalForPayment/V01/TransferObjects/V01/" xmlns:pdt="http://com/rbsg/soa/DataTypes/PrimitiveDataTypes/V03/"
            xmlns:sdef="http://com/rbsg/soa/Services/Definitions/V03/"  elementFormDefault="unqualified">
  <xsd:import namespace="http://com/rbsg/soa/C040PaymentManagement/CustomerRetrievalForPayment/V01/TransferObjects/V01/" schemaLocation="CustomerRetrievalForPaymentTransferObjects.xsd"/>
  <xsd:import namespace="http://com/rbsg/soa/Services/Definitions/V03/" schemaLocation="../shared/ServiceDefinitions.xsd"/>
  <xsd:import namespace="http://com/rbsg/soa/DataTypes/PrimitiveDataTypes/V03/" schemaLocation="../shared/PrimitiveDatatypes.xsd"/>
  <xsd:complexType name="retrievePrimaryCustomerForArrRequest">
    <xsd:sequence>
      <xsd:element name="requestHeader" type="sdef:RequestHeader"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="processingParameter" type="pdt:Property"/>
      <xsd:element name="arrangementIdentifier" type="pdt:ObjectReference">
        <xsd:annotation>
          <xsd:documentation>Identifier of the account for which the Customer is identified as the Primary Customer (Account Owner).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RetrievePrimaryCustomerForArrContent">
    <xsd:sequence>
      <xsd:element name="responseHeader" type="sdef:ResponseHeader"/>
      <xsd:element minOccurs="0" name="customer" type="crfpTO:InvolvedParty_TO"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="modifyToken" type="pdt:Property"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="retrievePrimaryCustomerForArrResponse">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="response" type="crfpSP:RetrievePrimaryCustomerForArrContent"/>
        <xsd:element name="exception" type="sdef:Exception"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <!-- Global elements required for WSDL operation binding -->
  <xsd:element name="retrievePrimaryCustomerForArr" type="crfpSP:retrievePrimaryCustomerForArrRequest"/>
  <xsd:element name="retrievePrimaryCustomerForArrResponse" type="crfpSP:retrievePrimaryCustomerForArrResponse"/>

</xsd:schema>
