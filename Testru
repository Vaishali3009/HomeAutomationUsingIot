public class TransactionContextHolder {
    private static final ThreadLocal<String> transactionIdHolder = new ThreadLocal<>();

    public static void setTransactionId(String transactionId) {
        transactionIdHolder.set(transactionId);
    }

    public static String getTransactionId() {
        return transactionIdHolder.get();
    }

    public static void clear() {
        transactionIdHolder.remove();
    }
}


------
@Component
public class TransactionIdInterceptor implements EndpointInterceptor {

    @Override
    public boolean handleRequest(MessageContext messageContext, Object endpoint) {
        try {
            WebServiceMessage request = messageContext.getRequest();
            Source source = request.getPayloadSource();
            DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
            Document document = builder.parse(new InputSource(source.getInputStream()));

            NodeList nodeList = document.getElementsByTagName("transactionId");
            if (nodeList.getLength() > 0) {
                String transactionId = nodeList.item(0).getTextContent();
                TransactionContextHolder.setTransactionId(transactionId);
            }
        } catch (Exception e) {
            // optionally log extraction failure
        }
        return true;
    }

    @Override
    public boolean handleResponse(MessageContext messageContext, Object endpoint) {
        return true;
    }

    @Override
    public boolean handleFault(MessageContext messageContext, Object endpoint) {
        return true;
    }

    @Override
    public void afterCompletion(MessageContext messageContext, Object endpoint, Exception ex) {
        TransactionContextHolder.clear(); // Clean after response
    }
}

------


@Configuration
public class SoapWebServiceConfig extends WsConfigurerAdapter {

    @Autowired
    private TransactionIdInterceptor transactionIdInterceptor;

    @Override
    public void addInterceptors(List<EndpointInterceptor> interceptors) {
        interceptors.add(transactionIdInterceptor);
    }
}


----

@Configuration
public class SoapWebServiceConfig extends WsConfigurerAdapter {

    @Autowired
    private TransactionIdInterceptor transactionIdInterceptor;

    @Override
    public void addInterceptors(List<EndpointInterceptor> interceptors) {
        interceptors.add(transactionIdInterceptor);
    }
}

------

log.info("Received request with transactionId: {}", TransactionContextHolder.getTransactionId());

