/**
 * Utility class for SOAP DOM manipulation.
 */
public class SoapInterceptorUtils {

    /**
     * Removes a child node from the specified parent node.
     * If {@code tagName} is provided, it removes the child node by matching the local name.
     * If {@code tagName} is null, it directly removes the provided node.
     *
     * @param parentOrNode the parent node (for tag-based removal) or the target node (for direct removal)
     * @param tagName       the local name of the tag to be removed; pass null to directly remove the node
     */
    public static void removeChildNode(Node parentOrNode, String tagName) {
        if (tagName == null) {
            // Directly remove the node if valid
            if (parentOrNode != null && parentOrNode.getParentNode() != null) {
                parentOrNode.getParentNode().removeChild(parentOrNode);
            }
        } else {
            // Remove child by tag name from the given parent
            NodeList children = parentOrNode.getChildNodes();
            for (int i = 0; i < children.getLength(); i++) {
                Node child = children.item(i);
                if (tagName.equals(child.getLocalName())) {
                    parentOrNode.removeChild(child);
                    break;
                }
            }
        }
    }
}
