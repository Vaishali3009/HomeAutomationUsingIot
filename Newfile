 private Optional<ErrorDetail> determineCustomerRetrievalError(RequestParams param) {
        Optional<ErrorDetail> errorDetail = Optional.empty();
        if (ServiceConstants.AccountTypes.UK_BASIC_BANK_ACCOUNT.equals(param.codeValue())) {
            if (param.identifier().startsWith("GB")) {
                log.info("Customer Account number Not Starting with GB");
                errorDetail = Optional.of(ErrorConstants.ERR_UBAN_GB.detail());
            } else if (param.length() != 14) {
                log.info("Customer not Found");
                errorDetail = Optional.of(ErrorConstants.ERR_CUSTOMER_NOT_FOUND.detail());
            } else if (!isUbanValid(param.identifier())) {
                errorDetail = Optional.of(ErrorConstants.ERR_CUSTOMER_NOT_FOUND.detail());
            }
            else{log.info("No Error was found for UBAN account number :{} with identifier :{}", param.codeValue,param.identifier);
            }
        }
        else if (ServiceConstants.AccountTypes.INTL_BANK_ACCOUNT.equals(param.codeValue())) {
            if (!param.identifier().startsWith("GB")) {
                errorDetail = Optional.of(ErrorConstants.ERR_UBAN_GB.detail());
            } else if (param.length() != 22) {
                errorDetail = Optional.of(ErrorConstants.ERR_UBAN_GB.detail());
            }
            else{
                log.info("No Error was found for IBAN account number :{} with identifier :{}", param.codeValue,param.identifier);
            }
        }
        return errorDetail;
    }
